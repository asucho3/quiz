{"version":3,"sources":["script.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","_typeof","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","user","alertTimer","login","document","querySelector","header","showAlert","text","innerHTML","clearTimeout","html","concat","insertAdjacentHTML","setTimeout","loginBtn","signUp","addEventListener","_callee","username","password","res","data","_callee$","_context","fetch","headers","body","JSON","stringify","json","console","log","status","location","assign","message","_callee2","_callee2$","_context2","game","objTimer","questionArr","played","timerValue","TIMEOUT_FETCH","INTERVAL","score","scoreElement","toggleTimer","action","timer","answerElements","querySelectorAll","textContent","setInterval","Number","el","classList","add","askQuestion","checkAnswer","answer","correctAnswer","candidate","toggleSpinner","questionElement","remove","endGame","_ref3","_callee3","answerContainer","_callee3$","_context3","randomQuestion","question","answers","e","preventDefault","dataset","fetchQuestion","_ref4","_callee4","_callee4$","_context4"],"mappings":"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","file":"bundle.js","sourceRoot":"","sourcesContent":["//LOGIN\r\nlet user;\r\nconst login = document.querySelector('.login');\r\nconst header = document.querySelector('.header');\r\nlet alertTimer;\r\n\r\nif (login) {\r\n  // generic function to show alerts\r\n  const showAlert = function (type, text) {\r\n    header.innerHTML = '';\r\n    clearTimeout(alertTimer);\r\n    const timeout = 10000;\r\n    const html = `<div class=\"header__alert ${type}\">${text}</div>`;\r\n    header.insertAdjacentHTML('afterbegin', html);\r\n    alertTimer = setTimeout(() => {\r\n      header.innerHTML = '';\r\n    }, timeout);\r\n  };\r\n\r\n  const loginBtn = document.querySelector('.login__content__button');\r\n  const signUp = document.querySelector('.login__content__signup');\r\n\r\n  //handle login button behaviour\r\n  loginBtn.addEventListener('click', async function () {\r\n    const username = document.querySelector('.login__content__username').value;\r\n    const password = document.querySelector('.login__content__password').value;\r\n    const res = await fetch('/api/v1/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(data);\r\n    if (data.status === 'success') {\r\n      location.assign('/game');\r\n    }\r\n    if (data.status !== 'success') {\r\n      showAlert('error', data.message);\r\n    }\r\n  });\r\n\r\n  //handle signup button behaviour\r\n  signUp.addEventListener('click', async function () {\r\n    const username = document.querySelector('.login__content__username').value;\r\n    const password = document.querySelector('.login__content__password').value;\r\n    const res = await fetch('/api/v1/auth/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n    const data = await res.json();\r\n    if (data.status === 'success') {\r\n      showAlert('created', 'User created successfully');\r\n    }\r\n    if (data.status !== 'success') {\r\n      showAlert('error', data.message);\r\n    }\r\n  });\r\n}\r\n\r\n//GAME\r\nconst game = document.querySelector('.game');\r\nif (game) {\r\n  // Initialize variables\r\n  let played = false;\r\n  let timerValue = 5;\r\n  const TIMEOUT_FETCH = 1000;\r\n  const INTERVAL = 1000;\r\n  let objTimer;\r\n  let score = 0;\r\n  let questionArr;\r\n\r\n  const scoreElement = document.querySelector('.game__score--current');\r\n\r\n  const toggleTimer = function (action) {\r\n    // Select DOM elements\r\n    const timer = document.querySelector('.game__timer');\r\n    const answerElements = document.querySelectorAll('.game__answer');\r\n\r\n    if (action === 'start') {\r\n      //start the countdown\r\n      timer.textContent = timerValue;\r\n      objTimer = setInterval(() => {\r\n        //if the timer is > 1, just substract 1\r\n        if (Number(timer.textContent) > 1) {\r\n          timer.textContent -= 1;\r\n        } else {\r\n          //display the 'time up' message and start the timeout until new question asked\r\n          timer.textContent = 'Time up!!!';\r\n          answerElements.forEach((el) => el.classList.add('incorrect'));\r\n          setTimeout(askQuestion, TIMEOUT_FETCH);\r\n          played = true;\r\n          clearTimeout(objTimer);\r\n        }\r\n      }, INTERVAL);\r\n    }\r\n    if (action === 'stop') {\r\n      clearTimeout(objTimer);\r\n    }\r\n  };\r\n\r\n  const checkAnswer = function (answer, correctAnswer) {\r\n    // Guard clause\r\n    if (played) return;\r\n\r\n    // Stop the timer and activate the guard clause\r\n    toggleTimer('stop');\r\n    played = true;\r\n\r\n    // Select timer (which also acts as a container for correct/incorrect text)\r\n    const timer = document.querySelector('.game__timer');\r\n    const candidate = Number(answer);\r\n\r\n    // Check if the answer is correct/incorrect and add the correct class to the DOM element\r\n    if (candidate === correctAnswer) {\r\n      const answerElement = document.querySelector(\r\n        `.game__answer[data-answer=\"${correctAnswer}\"]`\r\n      );\r\n      answerElement.classList.add('correct');\r\n      timer.textContent = 'Correct!!!';\r\n      score++;\r\n      scoreElement.textContent = `Current score: ${score}`;\r\n    }\r\n    if (candidate !== correctAnswer) {\r\n      const answerElement = document.querySelector(\r\n        `.game__answer[data-answer=\"${answer}\"]`\r\n      );\r\n      answerElement.classList.add('incorrect');\r\n      timer.textContent = 'Incorrect...';\r\n    }\r\n\r\n    // Start the countdown until the next question\r\n    setTimeout(askQuestion, TIMEOUT_FETCH);\r\n  };\r\n\r\n  const toggleSpinner = function () {\r\n    // Select DOM elements\r\n    const answerContainer = document.querySelector('.game__answers');\r\n    const questionElement = document.querySelector('.game__question');\r\n    const answerElements = document.querySelectorAll('.game__answer');\r\n\r\n    // Clear elements and replace question with a spinner\r\n    answerElements.forEach((el) => el.remove());\r\n    const html = `\r\n                <svg class='spinner'>\r\n                  <use xlink:href='/img/icons.svg#icon-loader'>\r\n                </svg>\r\n              `;\r\n    questionElement.innerHTML = html;\r\n  };\r\n\r\n  const endGame = async function () {\r\n    toggleSpinner();\r\n\r\n    // Select DOM elements\r\n    const answerContainer = document.querySelector('.game__answers');\r\n    const questionElement = document.querySelector('.game__question');\r\n    let answerElements = document.querySelectorAll('.game__answer');\r\n    const timer = document.querySelector('.game__timer');\r\n\r\n    // Insert whitespace instead of deleting (to avoid page resizing)\r\n    timer.textContent = 'Saving score to server...';\r\n\r\n    // Clear elements\r\n    answerElements.forEach((el) => el.remove());\r\n\r\n    // Upload score to the server\r\n    await fetch('/api/v1/auth/saveScore', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ score }),\r\n    });\r\n\r\n    timer.innerHTML = '&nbsp;';\r\n    questionElement.textContent = `Final score: ${score}`;\r\n\r\n    // Generate and insert markup\r\n    let html = `<div class=\"game__answer\">Start a new game</div>`;\r\n    answerContainer.insertAdjacentHTML('afterbegin', html);\r\n\r\n    // Add an event listener to the restart button\r\n    document\r\n      .querySelector('.game__answer')\r\n      .addEventListener('click', function () {\r\n        location.assign('/game');\r\n      });\r\n  };\r\n\r\n  const askQuestion = function () {\r\n    // Reset the played state\r\n    played = false;\r\n\r\n    // Select DOM elements\r\n    const answerContainer = document.querySelector('.game__answers');\r\n    const questionElement = document.querySelector('.game__question');\r\n    let answerElements = document.querySelectorAll('.game__answer');\r\n\r\n    // Clear elements\r\n    answerElements.forEach((el) => el.remove());\r\n    questionElement.textContent = '';\r\n\r\n    // Generate and insert markup\r\n    let html = ``;\r\n\r\n    // check if the question array is depleted\r\n    if (questionArr.length === 0) {\r\n      return endGame();\r\n    }\r\n\r\n    // 0- Pop a question from the array\r\n    // console.log(JSON.parse(JSON.stringify(questionArr)));\r\n    const randomQuestion = questionArr.pop();\r\n\r\n    // 1- Questions\r\n    questionElement.textContent = randomQuestion.question;\r\n\r\n    // 2- Answers\r\n    randomQuestion.answers.forEach((answer, i) => {\r\n      html += `<div class=\"game__answer\" data-answer=${i}>${answer}</div>`;\r\n    });\r\n    answerContainer.insertAdjacentHTML('afterbegin', html);\r\n\r\n    // 3- Re-select and add event listeners to answer elements\r\n    answerElements = document.querySelectorAll('.game__answer');\r\n    answerElements.forEach((el) =>\r\n      el.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        checkAnswer(el.dataset.answer, randomQuestion.correctAnswer);\r\n      })\r\n    );\r\n\r\n    // 4- Start timer\r\n    toggleTimer('start');\r\n  };\r\n\r\n  const fetchQuestion = async function () {\r\n    const timer = document.querySelector('.game__timer');\r\n    timer.textContent = '';\r\n    toggleSpinner();\r\n\r\n    //fetch questions (the amount of questions is set on the back-end)\r\n    const question = await fetch('/api/v1/question/normal');\r\n    const res = await question.json();\r\n    ({ questionArr } = res.data);\r\n\r\n    //start the game with this question array\r\n    askQuestion();\r\n  };\r\n\r\n  //init\r\n  fetchQuestion();\r\n}\r\n"]}